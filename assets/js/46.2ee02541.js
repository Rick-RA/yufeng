(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{366:function(t,a,s){"use strict";s.r(a);var r=s(33),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"编程风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程风格"}},[t._v("#")]),t._v(" 编程风格")]),t._v(" "),s("h2",{attrs:{id:"块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),s("h3",{attrs:{id:"let-const取代var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let-const取代var"}},[t._v("#")]),t._v(" let const取代var")]),t._v(" "),s("h2",{attrs:{id:"全局变量和线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量和线程安全"}},[t._v("#")]),t._v(" 全局变量和线程安全")]),t._v(" "),s("h3",{attrs:{id:"const优于let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const优于let"}},[t._v("#")]),t._v(" const优于let")]),t._v(" "),s("h3",{attrs:{id:"const可以提醒阅读的人这个变量不应该改变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const可以提醒阅读的人这个变量不应该改变"}},[t._v("#")]),t._v(" const可以提醒阅读的人这个变量不应该改变")]),t._v(" "),s("h3",{attrs:{id:"const比较符合编程思想，运算不改变值，只是新建值，而且这样也有利于将来的分布式运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const比较符合编程思想，运算不改变值，只是新建值，而且这样也有利于将来的分布式运算"}},[t._v("#")]),t._v(" const比较符合编程思想，运算不改变值，只是新建值，而且这样也有利于将来的分布式运算")]),t._v(" "),s("h3",{attrs:{id:"javascript编译器会对const进行优化，所以多使用const有利于提高程序的运行效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript编译器会对const进行优化，所以多使用const有利于提高程序的运行效率"}},[t._v("#")]),t._v(" javascript编译器会对const进行优化，所以多使用const有利于提高程序的运行效率")]),t._v(" "),s("h3",{attrs:{id:"所有的函数都应该设置为const常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#所有的函数都应该设置为const常量"}},[t._v("#")]),t._v(" 所有的函数都应该设置为const常量")]),t._v(" "),s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("h3",{attrs:{id:"静态字符串一律使用单引号或反引号，不适用双引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态字符串一律使用单引号或反引号，不适用双引号"}},[t._v("#")]),t._v(" 静态字符串一律使用单引号或反引号，不适用双引号")]),t._v(" "),s("h3",{attrs:{id:"动态字符串使用反引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态字符串使用反引号"}},[t._v("#")]),t._v(" 动态字符串使用反引号")]),t._v(" "),s("h2",{attrs:{id:"解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[t._v("#")]),t._v(" 解构赋值")]),t._v(" "),s("h3",{attrs:{id:"使用数组成员对变量进行赋值时，优先使用解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用数组成员对变量进行赋值时，优先使用解构赋值"}},[t._v("#")]),t._v(" 使用数组成员对变量进行赋值时，优先使用解构赋值")]),t._v(" "),s("h3",{attrs:{id:"函数的参数如果是对象成员，优先使用解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数如果是对象成员，优先使用解构赋值"}},[t._v("#")]),t._v(" 函数的参数如果是对象成员，优先使用解构赋值")]),t._v(" "),s("h3",{attrs:{id:"如果函数返回多个值，优先使用对象的解构赋值，而不是数组的解构赋值。这样方便以后添加返回值，以及更改返回值的顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果函数返回多个值，优先使用对象的解构赋值，而不是数组的解构赋值。这样方便以后添加返回值，以及更改返回值的顺序"}},[t._v("#")]),t._v(" 如果函数返回多个值，优先使用对象的解构赋值，而不是数组的解构赋值。这样方便以后添加返回值，以及更改返回值的顺序")]),t._v(" "),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),s("h3",{attrs:{id:"单行定义的对象，最后一个成员不以逗号结尾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行定义的对象，最后一个成员不以逗号结尾"}},[t._v("#")]),t._v(" 单行定义的对象，最后一个成员不以逗号结尾")]),t._v(" "),s("h3",{attrs:{id:"多行定义的对象，最后一个成员以逗号结尾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多行定义的对象，最后一个成员以逗号结尾"}},[t._v("#")]),t._v(" 多行定义的对象，最后一个成员以逗号结尾")]),t._v(" "),s("h3",{attrs:{id:"对象尽量静态化，一旦定义，就不随意添加新的属性。-如果添加属性不可避免，要使用object-assgin方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象尽量静态化，一旦定义，就不随意添加新的属性。-如果添加属性不可避免，要使用object-assgin方法"}},[t._v("#")]),t._v(" 对象尽量静态化，一旦定义，就不随意添加新的属性。 如果添加属性不可避免，要使用Object.assgin方法")]),t._v(" "),s("h3",{attrs:{id:"对象的属性名需要动态获取时，最好采用属性表达式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的属性名需要动态获取时，最好采用属性表达式。"}},[t._v("#")]),t._v(" 对象的属性名需要动态获取时，最好采用属性表达式。")]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"使用扩展运算符（-）复制数组-这种行为是深拷贝-itemscopy-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用扩展运算符（-）复制数组-这种行为是深拷贝-itemscopy-items"}},[t._v("#")]),t._v(" 使用扩展运算符（...）复制数组,这种行为是深拷贝     itemsCopy = [...Items]")]),t._v(" "),s("h3",{attrs:{id:"使用array-from-将类似数组的对象转为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用array-from-将类似数组的对象转为数组"}},[t._v("#")]),t._v(" 使用Array.from()将类似数组的对象转为数组")]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("h3",{attrs:{id:"立即执行的函数，可以写成箭头函数的形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即执行的函数，可以写成箭头函数的形式"}},[t._v("#")]),t._v(" 立即执行的函数，可以写成箭头函数的形式  ( ()=>{})()")]),t._v(" "),s("h3",{attrs:{id:"需要使用箭头函数的地方，尽量使用箭头函数，这样更简洁，而且绑定了this。比如class中的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需要使用箭头函数的地方，尽量使用箭头函数，这样更简洁，而且绑定了this。比如class中的方法"}},[t._v("#")]),t._v(" 需要使用箭头函数的地方，尽量使用箭头函数，这样更简洁，而且绑定了this。比如class中的方法")]),t._v(" "),s("h3",{attrs:{id:"箭头函数取代function-prototype-bind，不应再用self-this-that绑定this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数取代function-prototype-bind，不应再用self-this-that绑定this"}},[t._v("#")]),t._v(" 箭头函数取代Function.prototype.bind，不应再用self/_this/that绑定this")]),t._v(" "),s("h3",{attrs:{id:"简单的，单行的，不会复用的函数，建议采用箭头函数。-如果函数体较为复杂，行数较多，还是应该采用传统函数的写法。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单的，单行的，不会复用的函数，建议采用箭头函数。-如果函数体较为复杂，行数较多，还是应该采用传统函数的写法。"}},[t._v("#")]),t._v(" 简单的，单行的，不会复用的函数，建议采用箭头函数。  如果函数体较为复杂，行数较多，还是应该采用传统函数的写法。")]),t._v(" "),s("h3",{attrs:{id:"不要在函数体内使用arguments变量，用rest运算符（-）代替。rest运算符返回一个真正的数组。arguments是一个类似数组的对象。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不要在函数体内使用arguments变量，用rest运算符（-）代替。rest运算符返回一个真正的数组。arguments是一个类似数组的对象。"}},[t._v("#")]),t._v(" 不要在函数体内使用arguments变量，用rest运算符（...）代替。rest运算符返回一个真正的数组。arguments是一个类似数组的对象。")]),t._v(" "),s("h3",{attrs:{id:"使用默认值语法设置函数参数的默认值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用默认值语法设置函数参数的默认值"}},[t._v("#")]),t._v(" 使用默认值语法设置函数参数的默认值")]),t._v(" "),s("h2",{attrs:{id:"map结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map结构"}},[t._v("#")]),t._v(" Map结构")]),t._v(" "),s("h3",{attrs:{id:"只有模拟实体对象才使用object。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只有模拟实体对象才使用object。"}},[t._v("#")]),t._v(" 只有模拟实体对象才使用Object。")]),t._v(" "),s("h3",{attrs:{id:"如果只是需要key-value的数据结构，则使用map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果只是需要key-value的数据结构，则使用map"}},[t._v("#")]),t._v(" 如果只是需要key:value的数据结构，则使用Map")]),t._v(" "),s("h2",{attrs:{id:"class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" Class")]),t._v(" "),s("h3",{attrs:{id:"总是用class取代需要prototype的操作。因为class更简洁，更易于理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总是用class取代需要prototype的操作。因为class更简洁，更易于理解"}},[t._v("#")]),t._v(" 总是用class取代需要prototype的操作。因为class更简洁，更易于理解")]),t._v(" "),s("h2",{attrs:{id:"模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),s("h3",{attrs:{id:"module语法是javascript的标准写法，要坚持使用这种写法。使用import取代require"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module语法是javascript的标准写法，要坚持使用这种写法。使用import取代require"}},[t._v("#")]),t._v(" Module语法是javascript的标准写法，要坚持使用这种写法。使用import取代require")]),t._v(" "),s("h3",{attrs:{id:"如果模块只有一个输出值，就使用export-default；如果有多个输出值，就不适用export-default"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果模块只有一个输出值，就使用export-default；如果有多个输出值，就不适用export-default"}},[t._v("#")]),t._v(" 如果模块只有一个输出值，就使用export default；如果有多个输出值，就不适用export default")]),t._v(" "),s("h3",{attrs:{id:"不要同时使用export-default-和-export"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不要同时使用export-default-和-export"}},[t._v("#")]),t._v(" 不要同时使用export default 和 export")]),t._v(" "),s("h3",{attrs:{id:"如果模块默认输出一个函数，函数名的首字母应该小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果模块默认输出一个函数，函数名的首字母应该小写"}},[t._v("#")]),t._v(" 如果模块默认输出一个函数，函数名的首字母应该小写")]),t._v(" "),s("h3",{attrs:{id:"如果模块默认输出一个对象，对象名的首字母应该大写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果模块默认输出一个对象，对象名的首字母应该大写"}},[t._v("#")]),t._v(" 如果模块默认输出一个对象，对象名的首字母应该大写")]),t._v(" "),s("h2",{attrs:{id:"eslint的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint的使用"}},[t._v("#")]),t._v(" ESLint的使用")])])}),[],!1,null,null,null);a.default=e.exports}}]);