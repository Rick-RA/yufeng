(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{358:function(a,t,r){"use strict";r.r(t);var s=r(33),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"修饰器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修饰器"}},[a._v("#")]),a._v(" 修饰器")]),a._v(" "),r("h2",{attrs:{id:"类的修饰"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类的修饰"}},[a._v("#")]),a._v(" 类的修饰")]),a._v(" "),r("h3",{attrs:{id:"是一个函数，用来修饰类的行为"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是一个函数，用来修饰类的行为"}},[a._v("#")]),a._v(" 是一个函数，用来修饰类的行为")]),a._v(" "),r("h3",{attrs:{id:"修饰器的行为的改变时在代码编译时发生的，而不是运行是。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修饰器的行为的改变时在代码编译时发生的，而不是运行是。"}},[a._v("#")]),a._v(" 修饰器的行为的改变时在代码编译时发生的，而不是运行是。")]),a._v(" "),r("h3",{attrs:{id:"第一个参数就是要修饰的类-function-testable-target-target就是被修饰的类。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一个参数就是要修饰的类-function-testable-target-target就是被修饰的类。"}},[a._v("#")]),a._v(" 第一个参数就是要修饰的类 function testable(target){}, target就是被修饰的类。")]),a._v(" "),r("h3",{attrs:{id:"如果一个参数不够，可以在修饰器外再封装一层函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果一个参数不够，可以在修饰器外再封装一层函数"}},[a._v("#")]),a._v(" 如果一个参数不够，可以在修饰器外再封装一层函数")]),a._v(" "),r("h3",{attrs:{id:"子主题-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#子主题-5"}},[a._v("#")]),a._v(" 子主题 5")]),a._v(" "),r("h2",{attrs:{id:"方法的修饰"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法的修饰"}},[a._v("#")]),a._v(" 方法的修饰")]),a._v(" "),r("h3",{attrs:{id:"修饰器不仅可以修饰类，还可以修饰类的属性。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修饰器不仅可以修饰类，还可以修饰类的属性。"}},[a._v("#")]),a._v(" 修饰器不仅可以修饰类，还可以修饰类的属性。")]),a._v(" "),r("h3",{attrs:{id:"此时接收三个参数（1、所要修饰的目标对象-2、所要修饰的属性名-3、该属性的描述对象）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#此时接收三个参数（1、所要修饰的目标对象-2、所要修饰的属性名-3、该属性的描述对象）"}},[a._v("#")]),a._v(" 此时接收三个参数（1、所要修饰的目标对象 2、所要修饰的属性名  3、该属性的描述对象）")]),a._v(" "),r("h2",{attrs:{id:"为什么修饰器不能用于函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么修饰器不能用于函数"}},[a._v("#")]),a._v(" 为什么修饰器不能用于函数")]),a._v(" "),r("h3",{attrs:{id:"修饰器只能用于类和方法，不能用于函数，因为存在函数提升"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#修饰器只能用于类和方法，不能用于函数，因为存在函数提升"}},[a._v("#")]),a._v(" 修饰器只能用于类和方法，不能用于函数，因为存在函数提升")]),a._v(" "),r("h2",{attrs:{id:"core-decorators-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#core-decorators-js"}},[a._v("#")]),a._v(" core-decorators.js")]),a._v(" "),r("h3",{attrs:{id:"是一个第三方模块，提供了几个常见的修饰器，可以更好地理解修饰器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是一个第三方模块，提供了几个常见的修饰器，可以更好地理解修饰器"}},[a._v("#")]),a._v(" 是一个第三方模块，提供了几个常见的修饰器，可以更好地理解修饰器")]),a._v(" "),r("h3",{attrs:{id:"autobind"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#autobind"}},[a._v("#")]),a._v(" @autobind")]),a._v(" "),r("ul",[r("li",[a._v("使得方法中的this对象绑定原始对象")])]),a._v(" "),r("h3",{attrs:{id:"readonly"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#readonly"}},[a._v("#")]),a._v(" @readonly")]),a._v(" "),r("ul",[r("li",[a._v("属性或方法不可写")])]),a._v(" "),r("h3",{attrs:{id:"override"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#override"}},[a._v("#")]),a._v(" @override")]),a._v(" "),r("ul",[r("li",[a._v("检查子类方法是否覆盖了父类的同名方法，如果不正确报错")])]),a._v(" "),r("h3",{attrs:{id:"deprecate-deprecated"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deprecate-deprecated"}},[a._v("#")]),a._v(" @deprecate(@deprecated)")]),a._v(" "),r("ul",[r("li",[a._v("在控制台显示一条警告，表示该方法将废除")])]),a._v(" "),r("h3",{attrs:{id:"suppresswarnings"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#suppresswarnings"}},[a._v("#")]),a._v(" @suppressWarnings")]),a._v(" "),r("ul",[r("li",[a._v("修饰器抑制decorated修饰器导致的console.warn()调用，但异步代码发出的调用除外")])]),a._v(" "),r("h2",{attrs:{id:"mixin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mixin"}},[a._v("#")]),a._v(" Mixin")]),a._v(" "),r("h3",{attrs:{id:"在一个对象中混入另外一个对象的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在一个对象中混入另外一个对象的方法"}},[a._v("#")]),a._v(" 在一个对象中混入另外一个对象的方法")]),a._v(" "),r("h2",{attrs:{id:"trait"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trait"}},[a._v("#")]),a._v(" Trait")]),a._v(" "),r("h3",{attrs:{id:"效果与mixin类似，但是提供了更多功能，比如防止同名方法的冲突，排除混入某些方法、为混入的方法起别名等。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#效果与mixin类似，但是提供了更多功能，比如防止同名方法的冲突，排除混入某些方法、为混入的方法起别名等。"}},[a._v("#")]),a._v(" 效果与mixin类似，但是提供了更多功能，比如防止同名方法的冲突，排除混入某些方法、为混入的方法起别名等。")])])}),[],!1,null,null,null);t.default=e.exports}}]);