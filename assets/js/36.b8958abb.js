(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{357:function(t,a,s){"use strict";s.r(a);var r=s(33),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("h3",{attrs:{id:"提出背景：为了防止命名冲突。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提出背景：为了防止命名冲突。"}},[t._v("#")]),t._v(" 提出背景：为了防止命名冲突。")]),t._v(" "),s("h3",{attrs:{id:"es5的对象属性名都是字符串，合并对象等操作时容易造成命名冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es5的对象属性名都是字符串，合并对象等操作时容易造成命名冲突"}},[t._v("#")]),t._v(" ES5的对象属性名都是字符串，合并对象等操作时容易造成命名冲突")]),t._v(" "),s("h3",{attrs:{id:"es6引入数据类型symbol，表示独一无二的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6引入数据类型symbol，表示独一无二的值"}},[t._v("#")]),t._v(" ES6引入数据类型Symbol，表示独一无二的值")]),t._v(" "),s("h3",{attrs:{id:"symbol是一种类型，不是对象，所以不能使用new命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol是一种类型，不是对象，所以不能使用new命令"}},[t._v("#")]),t._v(" Symbol是一种类型，不是对象，所以不能使用new命令")]),t._v(" "),s("h3",{attrs:{id:"接受一个字符串作为参数，主要用来在控制台进行和其他symbol区分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接受一个字符串作为参数，主要用来在控制台进行和其他symbol区分"}},[t._v("#")]),t._v(" 接受一个字符串作为参数，主要用来在控制台进行和其他Symbol区分")]),t._v(" "),s("h3",{attrs:{id:"如果参数是一个对象，会调用该对象的tostring（）方法，将其转为字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果参数是一个对象，会调用该对象的tostring（）方法，将其转为字符串"}},[t._v("#")]),t._v(" 如果参数是一个对象，会调用该对象的toString（）方法，将其转为字符串")]),t._v(" "),s("h3",{attrs:{id:"相同的symbol的值是不等的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相同的symbol的值是不等的"}},[t._v("#")]),t._v(" 相同的symbol的值是不等的")]),t._v(" "),s("h3",{attrs:{id:"不能和其他类型进行运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不能和其他类型进行运算"}},[t._v("#")]),t._v(" 不能和其他类型进行运算")]),t._v(" "),s("h3",{attrs:{id:"可以显示转为字符串类型string-symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以显示转为字符串类型string-symbol"}},[t._v("#")]),t._v(" 可以显示转为字符串类型String(symbol)")]),t._v(" "),s("h3",{attrs:{id:"可以转为字符串boolean-symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以转为字符串boolean-symbol"}},[t._v("#")]),t._v(" 可以转为字符串Boolean(symbol)")]),t._v(" "),s("h2",{attrs:{id:"作为属性名的symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作为属性名的symbol"}},[t._v("#")]),t._v(" 作为属性名的Symbol")]),t._v(" "),s("h3",{attrs:{id:"a-mysymbol-hello"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-mysymbol-hello"}},[t._v("#")]),t._v(" a[mySymbol] = 'hello'")]),t._v(" "),s("h3",{attrs:{id:"a-mysymblo-hello"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-mysymblo-hello"}},[t._v("#")]),t._v(" a{[mySymblo]:'hello'}")]),t._v(" "),s("h3",{attrs:{id:"作为属性名时，不能使用点运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作为属性名时，不能使用点运算符"}},[t._v("#")]),t._v(" 作为属性名时，不能使用点运算符")]),t._v(" "),s("h3",{attrs:{id:"可以用于定义一组常量，保证这组常量的值都是不相等的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以用于定义一组常量，保证这组常量的值都是不相等的"}},[t._v("#")]),t._v(" 可以用于定义一组常量，保证这组常量的值都是不相等的")]),t._v(" "),s("h3",{attrs:{id:"作为属性名时，该属性是公开属性，不是私有属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作为属性名时，该属性是公开属性，不是私有属性"}},[t._v("#")]),t._v(" 作为属性名时，该属性是公开属性，不是私有属性")]),t._v(" "),s("h2",{attrs:{id:"属性名遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性名遍历"}},[t._v("#")]),t._v(" 属性名遍历")]),t._v(" "),s("h3",{attrs:{id:"object-getownpropertysymbols方法可以获取指定对象的所有symbol属性名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-getownpropertysymbols方法可以获取指定对象的所有symbol属性名"}},[t._v("#")]),t._v(" Object.getOwnPropertySymbols方法可以获取指定对象的所有Symbol属性名")])])}),[],!1,null,null,null);a.default=e.exports}}]);