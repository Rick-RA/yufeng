(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{367:function(a,t,r){"use strict";r.r(t);var s=r(33),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"数组的扩展"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的扩展"}},[a._v("#")]),a._v(" 数组的扩展")]),a._v(" "),r("h2",{attrs:{id:"扩展运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩展运算符"}},[a._v("#")]),a._v(" 扩展运算符")]),a._v(" "),r("h3",{attrs:{id:"spread-（-），如同rest参数的逆运算，将一个数组转为用逗号分隔的参数序列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spread-（-），如同rest参数的逆运算，将一个数组转为用逗号分隔的参数序列"}},[a._v("#")]),a._v(" spread （...），如同rest参数的逆运算，将一个数组转为用逗号分隔的参数序列")]),a._v(" "),r("h3",{attrs:{id:"扩展运算符可以结合结构赋值使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩展运算符可以结合结构赋值使用"}},[a._v("#")]),a._v(" 扩展运算符可以结合结构赋值使用")]),a._v(" "),r("h3",{attrs:{id:"扩展运算符可以实现数组的深拷贝"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩展运算符可以实现数组的深拷贝"}},[a._v("#")]),a._v(" 扩展运算符可以实现数组的深拷贝")]),a._v(" "),r("h3",{attrs:{id:"替代数组array方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#替代数组array方法"}},[a._v("#")]),a._v(" 替代数组array方法")]),a._v(" "),r("h3",{attrs:{id:"应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[a._v("#")]),a._v(" 应用")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("合并数组")]),a._v(" "),r("ul",[r("li",[a._v("[...arr1,...arr2,...arr3]")])])]),a._v(" "),r("li",[r("p",[a._v("与解构赋值结合")]),a._v(" "),r("ul",[r("li",[a._v("let [first,...result] = [1,2,3,4,5]")])])]),a._v(" "),r("li",[r("p",[a._v("函数的返回值")]),a._v(" "),r("ul",[r("li",[a._v("js的函数只能返回一个值，通常如果返回多个值，只能返回数组或对象，扩展运算符是一个变通的做法")])])]),a._v(" "),r("li",[r("p",[a._v("字符串")]),a._v(" "),r("ul",[r("li",[a._v("将字符串转为真正的数组")])])])]),a._v(" "),r("h2",{attrs:{id:"array-from"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#array-from"}},[a._v("#")]),a._v(" Array.from()")]),a._v(" "),r("h3",{attrs:{id:"用于将两类对象转成真正的数组："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#用于将两类对象转成真正的数组："}},[a._v("#")]),a._v(" 用于将两类对象转成真正的数组：")]),a._v(" "),r("ul",[r("li",[a._v("类似数组的对象")]),a._v(" "),r("li",[a._v("可遍历（iterable）对象")])]),a._v(" "),r("h2",{attrs:{id:"array-of"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#array-of"}},[a._v("#")]),a._v(" Array.of()")]),a._v(" "),r("h3",{attrs:{id:"用于将一组数值转换为数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#用于将一组数值转换为数组"}},[a._v("#")]),a._v(" 用于将一组数值转换为数组")]),a._v(" "),r("ul",[r("li",[a._v("类似于[].slice.call(arryLike)")])]),a._v(" "),r("h2",{attrs:{id:"数组实例的copywithin（）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组实例的copywithin（）"}},[a._v("#")]),a._v(" 数组实例的copyWithin（）")]),a._v(" "),r("h3",{attrs:{id:"在当前数组内部将指定位置的成员复制到其他位置（会覆盖所有原成员），然后返回当前数组。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在当前数组内部将指定位置的成员复制到其他位置（会覆盖所有原成员），然后返回当前数组。"}},[a._v("#")]),a._v(" 在当前数组内部将指定位置的成员复制到其他位置（会覆盖所有原成员），然后返回当前数组。")]),a._v(" "),r("h2",{attrs:{id:"数组实例的find-和findindex"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组实例的find-和findindex"}},[a._v("#")]),a._v(" 数组实例的find()和findIndex()")]),a._v(" "),r("h3",{attrs:{id:"find"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[a._v("#")]),a._v(" find()")]),a._v(" "),r("ul",[r("li",[a._v("用于找出第一个符合条件的数组成员")])]),a._v(" "),r("h3",{attrs:{id:"findindex"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#findindex"}},[a._v("#")]),a._v(" findIndex()")]),a._v(" "),r("ul",[r("li",[a._v("返回第一个符合条件的数组成员的位置")])]),a._v(" "),r("h2",{attrs:{id:"数组的fill"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的fill"}},[a._v("#")]),a._v(" 数组的fill()")]),a._v(" "),r("h3",{attrs:{id:"使用给定值填充一个数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用给定值填充一个数组"}},[a._v("#")]),a._v(" 使用给定值填充一个数组")]),a._v(" "),r("ul",[r("li",[a._v("['a',2,'c'].fill(7)  ===   [7,7,7]")])]),a._v(" "),r("h3",{attrs:{id:"接受第二和第三个参数，用于指定填充的起始位置和结束位置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#接受第二和第三个参数，用于指定填充的起始位置和结束位置"}},[a._v("#")]),a._v(" 接受第二和第三个参数，用于指定填充的起始位置和结束位置")]),a._v(" "),r("h2",{attrs:{id:"数组实例的entries-keys-values"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组实例的entries-keys-values"}},[a._v("#")]),a._v(" 数组实例的entries(),keys(),values()")]),a._v(" "),r("h3",{attrs:{id:"entries"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#entries"}},[a._v("#")]),a._v(" entries()")]),a._v(" "),r("ul",[r("li",[a._v("对键值对的遍历")])]),a._v(" "),r("h3",{attrs:{id:"keys"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#keys"}},[a._v("#")]),a._v(" keys()")]),a._v(" "),r("ul",[r("li",[a._v("对key的遍历")])]),a._v(" "),r("h3",{attrs:{id:"vaues"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vaues"}},[a._v("#")]),a._v(" vaues()")]),a._v(" "),r("ul",[r("li",[a._v("对value的遍历")])]),a._v(" "),r("h2",{attrs:{id:"includes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[a._v("#")]),a._v(" includes()")]),a._v(" "),r("h3",{attrs:{id:"返回一个布尔值，表示某个数组是否包含给定的值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#返回一个布尔值，表示某个数组是否包含给定的值"}},[a._v("#")]),a._v(" 返回一个布尔值，表示某个数组是否包含给定的值")]),a._v(" "),r("h3",{attrs:{id:"第二个参数表示搜索的起始位置，默认是0-如果第二个参数是负数，表示倒数的位置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第二个参数表示搜索的起始位置，默认是0-如果第二个参数是负数，表示倒数的位置"}},[a._v("#")]),a._v(" 第二个参数表示搜索的起始位置，默认是0.如果第二个参数是负数，表示倒数的位置")]),a._v(" "),r("h2",{attrs:{id:"数组的空位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的空位"}},[a._v("#")]),a._v(" 数组的空位")]),a._v(" "),r("h3",{attrs:{id:"数组的空位指数组的某个位置没有任何值。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的空位指数组的某个位置没有任何值。"}},[a._v("#")]),a._v(" 数组的空位指数组的某个位置没有任何值。")]),a._v(" "),r("ul",[r("li",[a._v("空位不是undefined，一个位置是undefined依然是有值的。空位是没有任何值的。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);